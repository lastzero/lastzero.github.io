<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Liquid Bytes</title>
    <link>https://blog.liquidbytes.net/categories/golang/</link>
    <description>Recent content in Golang on Liquid Bytes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You are free to share if you link back to this blog</copyright>
    <lastBuildDate>Thu, 06 Sep 2018 08:46:17 +0000</lastBuildDate>
    
	<atom:link href="https://blog.liquidbytes.net/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick and easy guide for migrating to Go 1.11 modules</title>
      <link>https://blog.liquidbytes.net/2018/09/quick-and-easy-guide-for-migrating-to-go-1-11-modules/</link>
      <pubDate>Thu, 06 Sep 2018 08:46:17 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2018/09/quick-and-easy-guide-for-migrating-to-go-1-11-modules/</guid>
      <description>Dependency management traditionally has been one of the weak spots of Go. Knowing that Google internally is using a monorepo, this didn&amp;#8217;t seem much of a surprise. Various techniques like using a vendor directory and tools like dep evolved to solve the issue. Go 1.11 finally comes with (experimental) module support and the good news is: While it doesn&amp;#8217;t look anything similar to dep, it&amp;#8217;s surprisingly easy to migrate to and use.</description>
    </item>
    
  </channel>
</rss>