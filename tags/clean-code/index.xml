<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clean Code on Liquid Bytes - Software Engineering &amp; Management Blog</title>
    <link>https://blog.liquidbytes.net/tags/clean-code/</link>
    <description>Recent content in Clean Code on Liquid Bytes - Software Engineering &amp; Management Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You are free to share if you link back to this blog</copyright>
    <lastBuildDate>Sat, 05 May 2012 09:56:12 +0000</lastBuildDate>
    
	<atom:link href="https://blog.liquidbytes.net/tags/clean-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exceptions: Andrew Hunt/David Thomas vs Robert C. Martin</title>
      <link>https://blog.liquidbytes.net/2012/05/exceptions-andrew-hunt-vs-robert-c-martin/</link>
      <pubDate>Sat, 05 May 2012 09:56:12 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/05/exceptions-andrew-hunt-vs-robert-c-martin/</guid>
      <description>There is a subtle difference between what Robert C. Martin recommends in Clean Code and what Andrew Hunt / David Thomas recommend in The Pragmatic Programmer. Martin encourages you to always use exceptions if the normal program flow is interrupted to avoid if statements (or even worse: forgotten if statements and mixed result types) while Hunt/Thomas say this can cause harm (&amp;#8220;it&amp;#8217;s a kind of cascading goto&amp;#8221;) and should only be used if something truly unexpected happens (tip 34).</description>
    </item>
    
    <item>
      <title>About Passion</title>
      <link>https://blog.liquidbytes.net/2012/04/about-passion/</link>
      <pubDate>Fri, 27 Apr 2012 08:57:12 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/04/about-passion/</guid>
      <description>What does passion mean for a Software Engineer? Depends on the context. First, and that&amp;#8217;s what start-up companies usually expect from their employes, it means you love the company, the business idea and the team you work with. Some people are also passionate about their Apple computer/phone/tablet in a similar way (the term &amp;#8220;Fanboy&amp;#8221; is frequently used in Web forums to describe this behavior). *
Second, it can mean that you stay ahead of the curve and have strong opinions about how to do your job (independent from the company you&amp;#8217;re currently working for): For example, I&amp;#8217;m obsessed with clean code and unit tests.</description>
    </item>
    
    <item>
      <title>The Clean Coder</title>
      <link>https://blog.liquidbytes.net/2012/04/the-clean-coder/</link>
      <pubDate>Fri, 20 Apr 2012 10:50:32 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/04/the-clean-coder/</guid>
      <description>I&amp;#8217;m currently reading The Clean Coder by Robert C. Martin. Here are some of my favorite quotes:
Caffeine &amp;#8220;There is no doubt that some of us can make more efficient use of our focus-manna by consuming moderate amounts of caffeine. But take care. Caffeine also puts a strange jitter on our focus.&amp;#8221;
Arrogance &amp;#8220;Programmers tend to be arrogant, self-absorbed introverts.We didn&amp;#8217;t go into this business because we like people. Most of us got into programming because we prefer to deeply focus on sterile minutia, juggle lots of concepts simultaneously, and in general prove to ourselves that we have brains the size of a planet, all while not having to interact with the messy complexities of other people.</description>
    </item>
    
    <item>
      <title>Why good code sometimes needs redundancy: The dynamic aspects</title>
      <link>https://blog.liquidbytes.net/2010/12/good-code-sometimes-needs-redundancy-the-dynamic-aspects/</link>
      <pubDate>Sat, 11 Dec 2010 15:15:09 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2010/12/good-code-sometimes-needs-redundancy-the-dynamic-aspects/</guid>
      <description>Introduction There is a general rule in software development, which says you should avoid duplicated code and data. This is extremely simple to remember and many developers love to quote it. Popular code quality assessment tools use it as a metric. Because this rule sounds so inerrable, it is applied even in cases, where it is not appropriate for one or more reasons.
Another well-known fact is that inexperienced developers like to duplicate everything using copy &amp;amp; paste, which causes a lot of maintenance overhead afterwards.</description>
    </item>
    
  </channel>
</rss>