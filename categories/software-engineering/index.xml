<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering on Liquid Bytes - Software Engineering &amp; Management Blog</title>
    <link>https://blog.liquidbytes.net/categories/software-engineering/</link>
    <description>Recent content in Software Engineering on Liquid Bytes - Software Engineering &amp; Management Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You are free to share if you link back</copyright>
    <lastBuildDate>Thu, 06 Sep 2018 08:46:17 +0000</lastBuildDate>
    
	<atom:link href="https://blog.liquidbytes.net/categories/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick and easy guide for migrating to Go 1.11 modules</title>
      <link>https://blog.liquidbytes.net/2018/09/quick-and-easy-guide-for-migrating-to-go-1-11-modules/</link>
      <pubDate>Thu, 06 Sep 2018 08:46:17 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2018/09/quick-and-easy-guide-for-migrating-to-go-1-11-modules/</guid>
      <description>Dependency management traditionally has been one of the weak spots of Go. Knowing that Google internally is using a monorepo, this didn&amp;#8217;t seem much of a surprise. Various techniques like using a vendor directory and tools like dep evolved to solve the issue. Go 1.11 finally comes with (experimental) module support and the good news is: While it doesn&amp;#8217;t look anything similar to dep, it&amp;#8217;s surprisingly easy to migrate to and use.</description>
    </item>
    
    <item>
      <title>Hire the best: My amazing experience with McKinsey, Amazon &amp; Co</title>
      <link>https://blog.liquidbytes.net/2017/01/hire-best-amazing-experience-mckinsey-amazon-co/</link>
      <pubDate>Thu, 12 Jan 2017 06:18:17 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2017/01/hire-best-amazing-experience-mckinsey-amazon-co/</guid>
      <description>Since I&amp;#8217;m not going to church, I need to write things down in my blog to let go. Probably every freelancer knows this: You&amp;#8217;re being contacted by recruiters that want to sell you a permanent position at their amazing company. So, how amazing can it be? Let&amp;#8217;s see.
First of all some facts. As a freelancer in Germany, you can easily make 85K a year, considering you work full time for 11 months and got a very affordable hourly rate of 60 EUR and 10K of expenses.</description>
    </item>
    
    <item>
      <title>Form Validation vs Model Validation</title>
      <link>https://blog.liquidbytes.net/2015/11/form-validation-vs-model-validation/</link>
      <pubDate>Sun, 15 Nov 2015 06:28:07 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/11/form-validation-vs-model-validation/</guid>
      <description>This is a follow-up on Why I’m using a separate layer for input data validation that explains the key differences between client-side, input value (form) and model validation.
In general, model validation operates on trusted data (internal system state) and should ideally be repeatable at any point in time while input validation explicitly operates once on data that comes from untrusted sources (depending on the use case and user privileges).</description>
    </item>
    
    <item>
      <title>Why I’m using a separate layer for input data validation</title>
      <link>https://blog.liquidbytes.net/2015/11/why-im-using-a-separate-layer-for-input-data-validation/</link>
      <pubDate>Sat, 14 Nov 2015 13:23:03 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/11/why-im-using-a-separate-layer-for-input-data-validation/</guid>
      <description>While some developers seem to prefer to implement their user data validation rules directly in the model layer (or even worse, the ORM entity layer), this very often leads to problems as described by Stefan Priebsch in his blog post on How to Validate Data.

In addition to the many issues he mentioned, you should consider the following advantages of using a separate layer to validate user input data:</description>
    </item>
    
    <item>
      <title>Howto: Install Cloud9 IDE on CentOS 6.3 / Linux</title>
      <link>https://blog.liquidbytes.net/2013/06/howto-installing-cloud9-ide-on-centos-6-3-linux/</link>
      <pubDate>Wed, 19 Jun 2013 22:13:55 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2013/06/howto-installing-cloud9-ide-on-centos-6-3-linux/</guid>
      <description>There is an interesting (and free) alternative for those who are sick of (re-)installing Eclipse, Aptana, Zend Studio, PhpStorm, NetBeans or other IDEs on each new computer they use &amp;#8211; or for those who don&amp;#8217;t have 1 GB of RAM left to waste just to run a source code editor. I used to work with gedit mainly for performance reasons, but this option is (sadly) not viable on OS X (there is a working gedit version for OS X, but IMHO it is not really usable in practice).</description>
    </item>
    
    <item>
      <title>Xubuntu 12.10 for Web software developers</title>
      <link>https://blog.liquidbytes.net/2012/10/xubuntu-12-10-for-web-software-developers/</link>
      <pubDate>Sun, 14 Oct 2012 17:31:04 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/10/xubuntu-12-10-for-web-software-developers/</guid>
      <description>Do you also think coding Web applications on OS X, Windows or even Ubuntu with Gnome 3 doesn&amp;#8217;t feel right? There are reasons: First, the production servers for probably 85% of all Web apps run on Linux: If you need special extensions, libraries or other tools, you know how difficult it can be to get them compiled, installed and running on &amp;#8220;non-standard&amp;#8221; environments and how easy it can be on a Debian/Ubuntu system.</description>
    </item>
    
    <item>
      <title>Wunderkit and the 6Wunderkinder – 8 months later</title>
      <link>https://blog.liquidbytes.net/2012/04/wunderkit-and-the-6wunderkinder-8-months-later/</link>
      <pubDate>Thu, 26 Apr 2012 14:55:55 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/04/wunderkit-and-the-6wunderkinder-8-months-later/</guid>
      <description>As you can see on my Linkedin profile, I used to work as consultant for 6Wunderkinder, a Berlin based start-up company, last year. My job was to provide training for the developers and help building the initial Web frontend for Wunderkit, their next product after the popular Wunderlist app. Even though I could say a lot about what I liked and didn&amp;#8217;t like about any company I worked with, I&amp;#8217;m never disclosing internal details.</description>
    </item>
    
    <item>
      <title>Quadcore processors are useful for Web developers</title>
      <link>https://blog.liquidbytes.net/2008/11/quadcore-processors-are-useful-for-web-developers/</link>
      <pubDate>Mon, 17 Nov 2008 21:44:50 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2008/11/quadcore-processors-are-useful-for-web-developers/</guid>
      <description>Every now and then you read, that the maximum you need on a desktop are two cores and that quadcore mainly is a nice marketing idea. That&amp;#8217;s probably true, if you use Word or Games mainly. For Word, even an Intel Atom processor is enough. As a Web developer which usually has some batch jobs running, a database, memached, Eclipse, Firefox and VMware with Windows to do tests, you will see that the four cores are worth the money, however!</description>
    </item>
    
    <item>
      <title>Yes, there is a memory leak…</title>
      <link>https://blog.liquidbytes.net/2008/05/yes-there-is-a-memory-leak/</link>
      <pubDate>Sun, 25 May 2008 04:49:10 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2008/05/yes-there-is-a-memory-leak/</guid>
      <description>If somebody ever said, there is no memory leak in Firefox, here&amp;#8217;s the proof:

It can&amp;#8217;t be, that a browser with 4 open tabs requires about 600 MB of memory. That&amp;#8217;s 150 MB per Web site, which seems a bit too much ;)
Safari, by the way, requires 128 MB for 5 open tabs.
 If you find that Firefox&amp;#8217;s memory usage continues to grow after long periods of being open, you may want to consider periodically restarting Firefox to bring the memory usage back to reasonable levels.</description>
    </item>
    
  </channel>
</rss>