<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Liquid Bytes - Software Engineering &amp; Management Blog</title>
    <link>https://blog.liquidbytes.net/categories/php/</link>
    <description>Recent content in Php on Liquid Bytes - Software Engineering &amp; Management Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You are free to share</copyright>
    <lastBuildDate>Fri, 04 Dec 2015 23:28:34 +0000</lastBuildDate>
    
	<atom:link href="https://blog.liquidbytes.net/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hosted continuous integration services for PHP</title>
      <link>https://blog.liquidbytes.net/2015/12/hosted-continuous-integration-services-php/</link>
      <pubDate>Fri, 04 Dec 2015 23:28:34 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/12/hosted-continuous-integration-services-php/</guid>
      <description>Today, I&amp;#8217;ve been evaluating popular hosted CI services to see how well they&amp;#8217;re working with PHP and how much they cost.
drone.io https://drone.io/
drone.io is free for Open Source projects (one concurrent build). Paid plans for private repositories start at 25 $ / month. Builds are configured on the Web site. PHP support is marked as &amp;#8220;beta&amp;#8221; for good reasons: PHP 5.5.1 and composer are pretty much outdated. By default, builds are triggered by commits to all branches (can be limited).</description>
    </item>
    
    <item>
      <title>Key differences between client-side, input and model validation explained</title>
      <link>https://blog.liquidbytes.net/2015/11/form-validation-vs-model-validation/</link>
      <pubDate>Sun, 15 Nov 2015 06:28:07 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/11/form-validation-vs-model-validation/</guid>
      <description>This is a follow-up on Why I’m using a separate layer for input data validation that explains the key differences between client-side, input value (form) and model validation.
In general, model validation operates on trusted data (internal system state) and should ideally be repeatable at any point in time while input validation explicitly operates once on data that comes from untrusted sources (depending on the use case and user privileges).</description>
    </item>
    
    <item>
      <title>Dependent Symfony 2 Bundles and Testability</title>
      <link>https://blog.liquidbytes.net/2015/11/dependent-symfony-2-bundles-and-testability/</link>
      <pubDate>Tue, 03 Nov 2015 12:37:13 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/11/dependent-symfony-2-bundles-and-testability/</guid>
      <description>I just came across a question concerning Symfony 2 bundles and testability on Stack Overflow that I would like to share with you.

When using Symfony, inexperienced or insecure developers tend to use lots of existing bundles, because this seems to be the recommend way of building an application. Later, they wonder, why it&amp;#8217;s so hard to write unit and component tests or they write functional tests instead and call them unit tests, because this really seems to be the only possible way to write tests.</description>
    </item>
    
    <item>
      <title>Howto: Install PHP, PHPUnit and Composer on Mac OS X</title>
      <link>https://blog.liquidbytes.net/2015/10/howto-install-php-5-6-and-phpunit-5-0-on-mac-os-x/</link>
      <pubDate>Thu, 29 Oct 2015 13:24:18 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2015/10/howto-install-php-5-6-and-phpunit-5-0-on-mac-os-x/</guid>
      <description>Make sure the directories /usr/local, /usr/local/bin and /usr/local/sbin exist and check the permissions, so that regular users can access them. This should already be the case, if you got Homebrew installed and working.
Open _~/.bashprofile and check, if /usr/local/bin and _/usr/local/sbin_ are properly added to your PATH environment variable:
export PATH=&#34;/usr/local/sbin:/usr/local/bin:$PATH&#34; If there is no _~/.bashprofile yet, simply create it (see Mac OS X configuration for software developers).
Since using Homebrew seems overly complicated and you&amp;#8217;ll get an outdated version (5.</description>
    </item>
    
    <item>
      <title>Howto: Install PHP 5.5 and PHPUnit on OS X via Homebrew</title>
      <link>https://blog.liquidbytes.net/2013/08/howto-install-php-5-5-and-phpunit-on-os-x-via-homebrew/</link>
      <pubDate>Sun, 25 Aug 2013 09:37:09 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2013/08/howto-install-php-5-5-and-phpunit-on-os-x-via-homebrew/</guid>
      <description>Here is how to install the latest PHP and PHPUnit versions on OS X using , which became my first choice after testing other package managers.
To avoid conflicts, it is generally not recommended to use Homebrew alongside other external OS X package managers such as MacPorts or Fink. You can remove MacPorts with these Terminal commands:
sudo port -f uninstall installed sudo rm -rf /opt/local sudo rm -rf /Applications/DarwinPorts If you prefer to stay with MacPorts: There is a blog post with a detailed howto for PHP 5.</description>
    </item>
    
    <item>
      <title>Configuring Ubuntu/Xubuntu and Apache 2 for local development environments</title>
      <link>https://blog.liquidbytes.net/2012/10/configuring-ubuntu-and-apache-2-for-development-environments/</link>
      <pubDate>Tue, 23 Oct 2012 19:10:12 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/10/configuring-ubuntu-and-apache-2-for-development-environments/</guid>
      <description>Most Web server howtos out there are concerned with production environments, where you need a high level of performance and security. As a developer who runs Apache 2 on localhost, you have other requirements, such as quick configuration and flexibility. It&amp;#8217;s inconvenient to edit (usually copy &amp;amp; paste) your virtual hosts configuration and add entries to /etc/hosts whenever you are working on new projects (e.g. on GitHub) &amp;#8211; especially, if you just want to test something.</description>
    </item>
    
    <item>
      <title>Eclipse is not the solution!</title>
      <link>https://blog.liquidbytes.net/2012/04/updated-cccs-for-php-posting-eclipse-is-not-the-solution/</link>
      <pubDate>Tue, 17 Apr 2012 21:42:27 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/04/updated-cccs-for-php-posting-eclipse-is-not-the-solution/</guid>
      <description>During the last couple of days, I&amp;#8217;ve been updating my posting about cargo cult coding standards for PHP. There are some examples now. Thanks to Arturas Smorgun for retweeting it. I&amp;#8217;m sure my post doesn&amp;#8217;t have a huge impact on the community, but for me it&amp;#8217;s still worth talking about my experiences.
Guess what&amp;#8217;s bothering me the most is that the popular PEAR/Zend Framework coding standard actually forces you to lose the context of your currently edited code.</description>
    </item>
    
    <item>
      <title>Cargo Cult Coding Standards (CCCS) for PHP</title>
      <link>https://blog.liquidbytes.net/2012/04/cargo-cult-coding-standards-cccs-for-php/</link>
      <pubDate>Wed, 04 Apr 2012 18:50:37 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2012/04/cargo-cult-coding-standards-cccs-for-php/</guid>
      <description>Cargo cult means that you copy some (previously) successful behavior from others and expect something good to happen to you (or your project) as well. For coding standards, that&amp;#8217;s a very good starting point. Especially since formatting standards are often not based on any science &amp;#8211; life is just easier, if everyone is using the same formatting for source code and we all hate the discussions at the start of projects, when some junior developer tries to promote it&amp;#8217;s own fancy ideas.</description>
    </item>
    
    <item>
      <title>Notification Free PHP Coding</title>
      <link>https://blog.liquidbytes.net/2010/08/notification-free-php-coding/</link>
      <pubDate>Fri, 20 Aug 2010 14:23:22 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2010/08/notification-free-php-coding/</guid>
      <description>This is a reply to http://100days.de/serendipity/archives/50-Notification-Free-PHP-Coding.html. Gaylord Aulke&amp;#8217;s opinions are normally quite valuable. There are a couple of arguments (just read the comments) in both directions and to be fair, Gaylord also said, that his opinion is different for frameworks and libraries.
Even though I tend look into PHP notifications (some code produces so much of them, that you can only ignore them), I wasn&amp;#8217;t really sure what my final position on Notification Free PHP Coding is and I was not too strict about it.</description>
    </item>
    
    <item>
      <title>AWF-CMS.org online again</title>
      <link>https://blog.liquidbytes.net/2010/08/awf-cms-org-online-again/</link>
      <pubDate>Sun, 15 Aug 2010 19:03:46 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2010/08/awf-cms-org-online-again/</guid>
      <description>Ha, after almost 3 years, the home page of my (so far) biggest Open Source project AWF-CMS is online again. When I started working for Zend in 2006&amp;frasl;2007, I felt the need to write a version that is based on Zend Framework. Of course I was busy with my customer projects, so that never happened. Even worse, due to a server upgrade, the configuration for the AWF Web site was broken and I didn&amp;#8217;t even find the time to fix that until today.</description>
    </item>
    
    <item>
      <title>Validation in the MVC design pattern</title>
      <link>https://blog.liquidbytes.net/2009/01/validation-in-the-mvc-design-pattern/</link>
      <pubDate>Mon, 05 Jan 2009 22:38:06 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2009/01/validation-in-the-mvc-design-pattern/</guid>
      <description>Hello Martin,
your article on Notification implies that validation should be done in
the Model layer. There are numerous voices that see the need for
validation in the Controller, as it receives user input in the first
place. I argue that actually both should be done in Web applications:
&amp;#8211; First you want to make sure that data integrity is given. You should
not outsource this essential task to the Controller or the View.</description>
    </item>
    
    <item>
      <title>Simple is hard</title>
      <link>https://blog.liquidbytes.net/2008/09/simple-is-hard/</link>
      <pubDate>Thu, 04 Sep 2008 19:31:21 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2008/09/simple-is-hard/</guid>
      <description>Check out these slides by Rasmus Lerdorf presented at FrOSCon 2008:
http://talks.php.net/show/froscon08
Yes, PHP frameworks do suck in terms of performance. CakePHP is the slowest while Zend Framework seems to be the most complex, in terms of include dependencies.</description>
    </item>
    
    <item>
      <title>Updated version of Zend_Db_Adapter_Odbtp_Mssql</title>
      <link>https://blog.liquidbytes.net/2008/05/updated-version-of-zend_db_adapter_odbtp_mssql/</link>
      <pubDate>Mon, 19 May 2008 14:16:08 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2008/05/updated-version-of-zend_db_adapter_odbtp_mssql/</guid>
      <description>As people start asking me about that ODBTP adapter for Zend Framework, I will publish it as attachment to this post now. It should work with the latest version of Zend Framework (as reported by a developer). If you want to use it, just copy the files to your include path (make sure the path comes before the ZF path). Of course, you need to install ODBTP as well and add extension=php_odbtp_mssql.</description>
    </item>
    
    <item>
      <title>PHP Magazin: Parlez-vous Zend?</title>
      <link>https://blog.liquidbytes.net/2007/07/php-magazin-zend-framework/</link>
      <pubDate>Wed, 11 Jul 2007 13:10:58 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2007/07/php-magazin-zend-framework/</guid>
      <description>Wer sich fuer mehrsprachige Unternehmens-Anwendungen mit Zend Framework interessiert, findet im aktuellen PHP Magazin (5.07) einen Artikel von mir. Anhand eines Fallbeispiels wurde gezeigt, wie die Neuentwicklung einer PHP Anwendung mit modernen Technologien ablaufen kann und was es zu beachten gibt. </description>
    </item>
    
    <item>
      <title>plat_forms 2007 results</title>
      <link>https://blog.liquidbytes.net/2007/06/plat_forms-2007-results/</link>
      <pubDate>Wed, 20 Jun 2007 13:37:02 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2007/06/plat_forms-2007-results/</guid>
      <description>The results of the plat_forms contest are finally published! PHP was the best platform in terms of completeness, maintainablity and security. Also, the differences between the PHP teams were small compared to Perl and Java &amp;#8211; that means, our **Team 8** was quite good, even if OXID (Team 6) is the winning team for PHP: Congratulations :)
I&amp;#8217;d like to mention that we had almost no defects in our solution:</description>
    </item>
    
    <item>
      <title>Zend Framework: Unicode DB adapter for SQL Server</title>
      <link>https://blog.liquidbytes.net/2007/05/odbtp-adapter-zend-framework/</link>
      <pubDate>Thu, 31 May 2007 13:26:06 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2007/05/odbtp-adapter-zend-framework/</guid>
      <description>Yeah, I finally got it managed to publish my proposal for the Zend Framwork ODBTP database adapter component:
http://framework.zend.com/wiki/display/ZFPROP/Zend_Db_Adapter_Odbtp_Mssql
The default MS SQL database driver does not work with Unicode, as SQL Server expects Unicode strings in the UCS-2 encoding (UCS-2 contains null bytes and the driver is not binary-safe). ODBTP works as layer between PHP and SQL Server and accepts Unicode strings in the UTF-8 encoding.
The required classes are attached bellow.</description>
    </item>
    
    <item>
      <title>XSS Probleme in PEAR::Text_Wiki 1.1.0</title>
      <link>https://blog.liquidbytes.net/2006/06/pear_text_wiki_xss/</link>
      <pubDate>Sat, 10 Jun 2006 16:52:12 +0000</pubDate>
      
      <guid>https://blog.liquidbytes.net/2006/06/pear_text_wiki_xss/</guid>
      <description>Gestern habe ich durch Zufall einen XSS Bug in Text_Wiki entdeckt&amp;#8230; wundert mich, dass das vor mir niemand aufgefallen ist&amp;#8230; genau genommen geht es um eine unsichere Konfigurations-Option&amp;#8230;
Siehe:
 http://pear.php.net/bugs/bug.php?id=7847 http://cvs.php.net/viewcvs.cgi/pear/Text_Wiki/Text/Wiki/Render/Xhtml/Raw.php?view=log  </description>
    </item>
    
  </channel>
</rss>